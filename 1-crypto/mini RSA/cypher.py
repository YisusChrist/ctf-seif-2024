import gmpy2
from libnum import n2s

N = 1615765684321463054078226051959887884233678317734892901740763321135213636796075462401950274602405095138589898087428337758445013281488966866073355710771864671726991918706558071231266976427184673800225254531695928541272546385146495736420261815693810544589811104967829354461491178200126099661909654163542661541699404839644035177445092988952614918424317082380174383819025585076206641993479326576180793544321194357018916215113009742654408597083724508169216182008449693917227497813165444372201517541788989925461711067825681947947471001390843774746442699739386923285801022685451221261010798837646928092277556198145662924691803032880040492762442561497760689933601781401617086600593482127465655390841361154025890679757514060456103104199255917164678161972735858939464790960448345988941481499050248673128656508055285037090026439683847266536283160142071643015434813473463469733112182328678706702116054036618277506997666534567846763938692335069955755244438415377933440029498378955355877502743215305768814857864433151287
E = 3
INPUT = 1220012318588871886132524757898884422174534558055593713309088304910273991073554732659977133980685370899257850121970812405700793710546674062154237544840177616746805668666317481140872605653768484867292138139949076102907399831998827567645230986345454420935379996843111815945295105526950160827993675276454728058249991496606359369729713705436236165188139595623192112049985862360565399120568480492632627582880476913874481837148764476250653289337204475269651427046487784657746213340203248181195351651081975399447141705074094206927605964246754683848990292254887116103864518590196363481335175568943806960551304560823267508157652749298437443179377038395767409492966540843424888840082621847622188361025580020884901510511752571379129033485599348643778708682869792355334194262476681389610690571742130148022158841824889067215801865314646121446130021216394885009557240540717053428162257691869971105740689496332594410393770457771488119566385867254168834300189799822226069386134463601029173877673538166268491530922879135322


def extended_gcd(a, b):
    if b == 0:
        return a, 1, 0
    else:
        d, x, y = extended_gcd(b, a % b)
        return d, y, x - y * (a // b)


def modinv(a, m):
    d, x, y = extended_gcd(a, m)
    if d != 1:
        raise ValueError("Inverse does not exist")
    return x % m


def calculate_private_exponent(e, p, q):
    phi = (p - 1) * (q - 1)
    d = modinv(e, phi)
    return d


def main():
    c = INPUT
    while True:
        m = gmpy2.root(c, 3)[0]
        if pow(m, 3, N) == INPUT:
            print("pwned", n2s(int(m)))
            break
        c += N


def main_1():
    """
    # Factorize N to find p and q
    p, q = gmpy2.mpz(gmpy2.iroot(N, 2)[0]), gmpy2.mpz(gmpy2.iroot(N, 2)[0])
    while N % p != 0:
        p -= 1
    q = N // p
    """
    n = N
    e = E
    c = INPUT
    # Calculate private exponent d
    d = 1 / 2  # calculate_private_exponent(e, p, q)
    m = pow(c, d)  # , n)
    print(m)


if __name__ == "__main__":
    main()
